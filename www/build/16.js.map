{"version":3,"sources":["../../src/pages/entities/images/images.module.ts","../../src/pages/entities/images/images.provider.ts","../../src/pages/entities/images/images.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ImagesPage } from './images';\nimport { ImagesService } from './images.provider';\n\n@NgModule({\n    declarations: [\n        ImagesPage\n    ],\n    imports: [\n        IonicPageModule.forChild(ImagesPage),\n        TranslateModule.forChild()\n    ],\n    exports: [\n        ImagesPage\n    ],\n    providers: [ImagesService]\n})\nexport class ImagesPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/entities/images/images.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Api } from '../../../providers/api/api';\n// todo: handle dates\n\nimport { Images } from './images.model';\n\n@Injectable()\nexport class ImagesService {\n    private resourceUrl = Api.API_URL + '/images';\n\n    constructor(private http: HttpClient) { }\n\n    create(images: Images): Observable<Images> {\n        return this.http.post(this.resourceUrl, images);\n    }\n\n    update(images: Images): Observable<Images> {\n        return this.http.put(this.resourceUrl, images);\n    }\n\n    find(id: number): Observable<Images> {\n        return this.http.get(`${this.resourceUrl}/${id}`);\n    }\n\n    query(req?: any): Observable<any> {\n        return this.http.get(this.resourceUrl);\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response', responseType: 'text' });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/entities/images/images.provider.ts","import { Component } from '@angular/core';\nimport { IonicPage, ModalController, NavController, ToastController } from 'ionic-angular';\nimport { Images } from './images.model';\nimport { ImagesService } from './images.provider';\n\n@IonicPage()\n@Component({\n    selector: 'page-images',\n    templateUrl: 'images.html'\n})\nexport class ImagesPage {\n    images: Images[];\n\n    // todo: add pagination\n\n    constructor(private navCtrl: NavController, private imagesService: ImagesService,\n                private modalCtrl: ModalController, private toastCtrl: ToastController) {\n        this.images = [];\n    }\n\n    ionViewDidLoad() {\n        this.loadAll();\n    }\n\n    loadAll(refresher?) {\n        this.imagesService.query().subscribe(\n            (response) => {\n                this.images = response;\n                if (typeof(refresher) !== 'undefined') {\n                    refresher.complete();\n                }\n            },\n            (error) => {\n                console.error(error);\n                let toast = this.toastCtrl.create({message: 'Failed to load data', duration: 2000, position: 'middle'});\n                toast.present();\n            });\n    }\n\n    trackId(index: number, item: Images) {\n        return item.id;\n    }\n\n    open(slidingItem: any, item: Images) {\n        let modal = this.modalCtrl.create('ImagesDialogPage', {item: item});\n        modal.onDidDismiss(images => {\n            if (images) {\n                if (images.id) {\n                    this.imagesService.update(images).subscribe(data => {\n                        this.loadAll();\n                        let toast = this.toastCtrl.create(\n                            {message: 'Images updated successfully.', duration: 3000, position: 'middle'});\n                        toast.present();\n                        slidingItem.close();\n                    }, (error) => console.error(error));\n                } else {\n                    this.imagesService.create(images).subscribe(data => {\n                        this.images.push(data);\n                        let toast = this.toastCtrl.create(\n                            {message: 'Images added successfully.', duration: 3000, position: 'middle'});\n                        toast.present();\n                    }, (error) => console.error(error));\n                }\n            }\n        });\n        modal.present();\n    }\n\n    delete(images) {\n        this.imagesService.delete(images.id).subscribe(() => {\n            let toast = this.toastCtrl.create(\n                {message: 'Images deleted successfully.', duration: 3000, position: 'middle'});\n            toast.present();\n            this.loadAll();\n        }, (error) => console.error(error));\n    }\n\n    detail(images: Images) {\n        this.navCtrl.push('ImagesDetailPage', {id: images.id});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/entities/images/images.ts"],"sourceRoot":""}